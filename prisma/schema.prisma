generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// @crud
model Tariff {
  id        String   @id @default(cuid())
  code      String?
  name      String?
  price     Int?     @default(0)
  active    Boolean? @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

/// @crud
model Recipes {
  id          String   @id @default(cuid())
  description String?
  firstName   String
  active      Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

/// @crud
model Patient {
  id                String            @id @default(cuid())
  documentType      String
  documentNumber    String            @unique
  firstName         String
  lastName          String
  email             String            @unique
  phone             String
  birthDate         DateTime
  gender            String // "M" | "F" "O", etc.
  active            Boolean           @default(true)
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt
  clinicalHistories ClinicalHistory[]
  appointments      Appointment[]
}

/// @crud
model Professional {
  id                String            @id @default(cuid())
  fullName          String
  email             String
  phone             String
  specialty         String
  active            Boolean           @default(true)
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt
  appointments      Appointment[]
  clinicalHistories ClinicalHistory[] // si firmar√° historias
}

/// @crud
model Services {
  id          String   @id @default(cuid())
  code        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  active      Boolean  @default(true)
}

/// @crud
model Prueba {
  id          String   @id @default(cuid())
  code String?
  description String?
  active Boolean? @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

/// @crud
model Prueba2 {
  id          String   @id @default(cuid())
  code String?
  description String?
  active Boolean? @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

/// @crud
model ClinicalHistory {
  id             String   @id @default(cuid())
  patientId      String
  professionalId String?
  date           DateTime @default(now())
  notes          String?
  diagnosis      String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  patient      Patient       @relation(fields: [patientId], references: [id], onDelete: Cascade)
  professional Professional? @relation(fields: [professionalId], references: [id])
}

model Appointment {
  id             String   @id @default(cuid())
  professionalId String
  patientId      String
  startsAt       DateTime
  endsAt         DateTime
  status         String   @default("SCHEDULED") // SCHEDULED | COMPLETED | CANCELLED
  notes          String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  professional Professional @relation(fields: [professionalId], references: [id], onDelete: Cascade)
  patient      Patient      @relation(fields: [patientId], references: [id], onDelete: Cascade)

  @@index([professionalId, startsAt])
  @@index([patientId, startsAt])
}
